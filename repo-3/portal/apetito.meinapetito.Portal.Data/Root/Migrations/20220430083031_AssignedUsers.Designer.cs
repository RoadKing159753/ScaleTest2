// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apetito.meinapetito.Portal.Data.Root;

#nullable disable

namespace apetito.meinapetito.Portal.Data.Root.Migrations
{
    [DbContext(typeof(PortalDbContext))]
    [Migration("20220430083031_AssignedUsers")]
    partial class AssignedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CS_AS")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.PortalUserCustomerNumbersData", b =>
                {
                    b.Property<Guid>("PortalUserCustomerNumbersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PortalUserCustomerNumbersId");

                    b.ToTable("PortalUserCustomerNumbers");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.PortalUserCustomerNumbersEntryData", b =>
                {
                    b.Property<Guid>("PortalUserCustomerNumbersEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PortalUserCustomerNumbersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortalUserCustomerNumbersEntryId");

                    b.HasIndex("PortalUserCustomerNumbersId");

                    b.ToTable("PortalUserCustomerNumbersEntries");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.Sortiments.PortalUserCustomerNumberEntrySortimentData", b =>
                {
                    b.Property<Guid>("PortalUserCustomerNumbersEntrySortimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserCustomerNumbersEntryReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PortalUserCustomerNumbersEntrySortimentId");

                    b.ToTable("PortalUserCustomerNumberEntrySortiments");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.Sortiments.PortalUserCustomerNumberEntrySortimentEntryData", b =>
                {
                    b.Property<Guid>("PortalUserCustomerNumbersEntrySortimentEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserCustomerNumbersEntryReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserCustomerNumbersEntrySortimentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortalUserReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SortimentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortalUserCustomerNumbersEntrySortimentEntryId");

                    b.HasIndex("PortalUserCustomerNumbersEntrySortimentId");

                    b.ToTable("PortalUserCustomerNumberEntrySortimentsEntries");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.PortalUsers.PortalUserData", b =>
                {
                    b.Property<Guid>("PortalUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AzureADB2CUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortalUserId");

                    b.ToTable("PortalUsers");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.Users.UserFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserFilters");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.PortalUserCustomerNumbersEntryData", b =>
                {
                    b.HasOne("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.PortalUserCustomerNumbersData", null)
                        .WithMany("CustomerNumbers")
                        .HasForeignKey("PortalUserCustomerNumbersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.Sortiments.PortalUserCustomerNumberEntrySortimentEntryData", b =>
                {
                    b.HasOne("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.Sortiments.PortalUserCustomerNumberEntrySortimentData", null)
                        .WithMany("Sortiments")
                        .HasForeignKey("PortalUserCustomerNumbersEntrySortimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.PortalUserCustomerNumbersData", b =>
                {
                    b.Navigation("CustomerNumbers");
                });

            modelBuilder.Entity("apetito.meinapetito.Portal.Data.Root.MainCustomerAdmins.CustomerNumbers.Sortiments.PortalUserCustomerNumberEntrySortimentData", b =>
                {
                    b.Navigation("Sortiments");
                });
#pragma warning restore 612, 618
        }
    }
}
